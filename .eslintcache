[{"E:\\MERN\\projfrontend\\src\\index.js":"1","E:\\MERN\\projfrontend\\src\\Routes.js":"2","E:\\MERN\\projfrontend\\src\\core\\Home.js":"3","E:\\MERN\\projfrontend\\src\\backend.js":"4","E:\\MERN\\projfrontend\\src\\core\\Base.js":"5","E:\\MERN\\projfrontend\\src\\core\\menu.js":"6","E:\\MERN\\projfrontend\\src\\user\\Signup.js":"7","E:\\MERN\\projfrontend\\src\\user\\Signin.js":"8","E:\\MERN\\projfrontend\\src\\core\\Menu.js":"9","E:\\MERN\\projfrontend\\src\\auth\\helper\\index.js":"10"},{"size":155,"mtime":1611010815876,"results":"11","hashOfConfig":"12"},{"size":501,"mtime":1611010815926,"results":"13","hashOfConfig":"12"},{"size":640,"mtime":1611010816002,"results":"14","hashOfConfig":"12"},{"size":50,"mtime":1611010815903,"results":"15","hashOfConfig":"12"},{"size":979,"mtime":1611010816026,"results":"16","hashOfConfig":"12"},{"size":1804,"mtime":1610993708374,"results":"17","hashOfConfig":"12"},{"size":3286,"mtime":1611010816606,"results":"18","hashOfConfig":"12"},{"size":3162,"mtime":1611010816575,"results":"19","hashOfConfig":"12"},{"size":1804,"mtime":1611010816059,"results":"20","hashOfConfig":"12"},{"size":1351,"mtime":1611010816187,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9562yc",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\MERN\\projfrontend\\src\\index.js",[],"E:\\MERN\\projfrontend\\src\\Routes.js",[],["44","45"],"E:\\MERN\\projfrontend\\src\\core\\Home.js",[],"E:\\MERN\\projfrontend\\src\\backend.js",[],"E:\\MERN\\projfrontend\\src\\core\\Base.js",[],"E:\\MERN\\projfrontend\\src\\core\\menu.js",[],"E:\\MERN\\projfrontend\\src\\user\\Signup.js",[],"E:\\MERN\\projfrontend\\src\\user\\Signin.js",["46"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAutheticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then(data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n          });\n        }\n      })\n      .catch(console.log(\"signin request failed\"));\n  };\n\n  const performRedirect = () => {\n    //TODO: do a redirect here\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <p>redirect to admin</p>;\n      } else {\n        return <p>redirect to user dashboard</p>;\n      }\n    }\n    if (isAutheticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input\n                onChange={handleChange(\"email\")}\n                value={email}\n                className=\"form-control\"\n                type=\"email\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type=\"password\"\n              />\n            </div>\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n    </Base>\n  );\n};\n\nexport default Signin;\n","E:\\MERN\\projfrontend\\src\\core\\Menu.js",[],"E:\\MERN\\projfrontend\\src\\auth\\helper\\index.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":3,"column":10,"nodeType":"53","messageId":"54","endLine":3,"endColumn":14},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]